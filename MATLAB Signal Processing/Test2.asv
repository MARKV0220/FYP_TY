close all;
clear all;
clc;

fileID = fopen('BAF5.txt','r');
formatSpec = '%f';
sizeA = [10 Inf];
AGM = fscanf(fileID,formatSpec,sizeA);      %accelerometer, gyroscope, magnetic x,y,z
AGM = AGM';
fclose(fileID);

AccelX = AGM(:,1);
AccelY = AGM(:,2);
AccelZ = AGM(:,3);
GyroX = AGM(:,4);
GyroY = AGM(:,5);
GyroZ = AGM(:,6);
Bearing = AGM(:,10);

% calibrate the direction of acceleration
AccelX = AccelX*(-1);

% remove the gravity from three axes
NumMea = size(AccelX,1);                   %number of measurements, total row number
AccelX = AccelX - sum(AccelX)/NumMea;
AccelY = AccelY - sum(AccelY)/NumMea;
AccelZ = AccelZ - sum(AccelZ)/NumMea;

%transform acceleration into m/s^2---------g = 9.78 m/s^2
g=9.78;
accel_range = 2;                           %+-2g 
AccelX = AccelX/(2^15-1)*g*accel_range;
AccelY = AccelY/(2^15-1)*g*accel_range;
AccelZ = AccelZ/(2^15-1)*g*accel_range;

%tranform rotational speed into deg/s
gyro_range = 250;                           %+-250 degrees/s
GyroX = GyroX/(2^15-1)*gyro_range;
GyroY = GyroY/(2^15-1)*gyro_range;
GyroZ = GyroZ/(2^15-1)*gyro_range;



% figure;
% AccelXFFT = fft(AccelX);
% L = 838;
Fs = 50;
% P2 = abs(AccelXFFT/L);
% P1 = P2(1:L/2+1);
% P1(2:end-1) = 2*P1(2:end-1);
% f = Fs*(0:(L/2))/L;
% plot(f,P1) ;

t = (0:NumMea-1)/Fs;
Fnorm = 3/(Fs/2);
df = designfilt('lowpassfir','FilterOrder',70,'CutoffFrequency',Fnorm);
D = 35;
y1 = filter(df,[AccelX; zeros(D,1)]); 
y1 = y1(D+1:end); 
figure;
plot(t,AccelX,t,y1);
AccelX = y1;

y2 = filter(df,[GyroY; zeros(D,1)]); 
y2 = y2(D+1:end); 
figure;
plot(t,G,t,y1);
GyroY = y2;

%remove the rotational acceleration
%Rotating_Radius = 0.2;                     %radius = 5 cm
%AccelX = AccelX + (GyroY/180*pi).^2 * Rotating_Radius;              %w^2*r = a

TrjX = zeros(NumMea,1);
TrjY = zeros(NumMea,1);
v= zeros(NumMea,1);
DeltaT = 0.02;              %sampling time interval is 0.02s (50Hz)

for i=1:NumMea-1
   
    v(i+1,1) = v(i,1)+(AccelX(i+1,1)+AccelX(i,1))/2*DeltaT;             %trapezoidal integration
    DeltaD = (v(i+1,1)+v(i,1))/2*DeltaT;                                 %the magnitude of each displacement
    TrjX(i+1,1) = TrjX(i,1) + DeltaD * cos((90-Bearing(i,1))/180*pi);
    TrjY(i+1,1) = TrjY(i,1) + DeltaD * sin((90-Bearing(i,1))/180*pi);
    
end


figure;
scatter(TrjX,TrjY);
title('Reconstructed Trajectory');

figure
subplot(5,1,1);
plot(AccelX);
title('Acceleration X');
subplot(5,1,2);
plot(AccelY);
title('Acceleration Y');
subplot(5,1,3);
plot(AccelZ);
title('Acceleration Z');
subplot(5,1,4);
plot(Bearing);
title('Bearing');
subplot(5,1,5);
plot(v);
title('Integrated Speed');

figure
subplot(3,1,1);
plot(GyroX);
title('Rotational Speed X');
subplot(3,1,2);
plot(GyroY);
title('Rotational Speed Y');
subplot(3,1,3);
plot(GyroZ);
title('Rotational Speed Z');







